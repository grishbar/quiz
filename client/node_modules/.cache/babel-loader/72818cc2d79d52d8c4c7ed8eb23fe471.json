{"ast":null,"code":"var _jsxFileName = \"/Users/Gregory/projects/quiz/src/containers/App.js\";\nimport React from \"react\";\nimport AdminPage from \"../components/AdminPage\";\nimport QuestionOne from \"../components/QuestionOne\";\nimport QuestionTwo from \"../components/QuestionTwo\";\nimport QuestionThree from \"../components/QuestionThree\";\nimport QuestionFour from \"../components/QuestionFour\";\nimport QuestionFive from \"../components/QuestionFive\";\nimport StartPage from \"../components/StartPage\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.startQuestion = this.startQuestion.bind(this);\n    this.endQuestion = this.endQuestion.bind(this);\n    this.resetQuestion = this.resetQuestion.bind(this);\n    this.updateAnswers = this.updateAnswers.bind(this);\n    this.updateQuestionState = this.updateQuestionState.bind(this); //window.setInterval(this.update, 5000);\n\n    this.state = {\n      answers: [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],\n      isIntervalSet: false,\n      questionState: {\n        1: true,\n        2: true,\n        3: true,\n        4: true,\n        5: true\n      },\n      questionData: [{\n        \"isActive\": false,\n        \"isFinished\": false,\n        \"answers\": [1, 2, 3]\n      }, {\n        \"isActive\": false,\n        \"isFinished\": false,\n        \"answers\": [2, 2, 2]\n      }, {\n        \"isActive\": false,\n        \"isFinished\": false,\n        \"answers\": [3, 2, 1]\n      }, {\n        \"isActive\": false,\n        \"isFinished\": false,\n        \"answers\": [4, 4, 4]\n      }, {\n        \"isActive\": false,\n        \"isFinished\": false,\n        \"answers\": [5, 0, 0]\n      }]\n    };\n  }\n\n  async update() {\n    const response = await fetch('./question-data.json');\n    const questionData = await response.json();\n    let newAnswers = [];\n\n    for (let i = 0; i < questionData.length; i++) {\n      newAnswers.push(questionData[i]['answers']);\n    }\n\n    this.setState({\n      answers: newAnswers,\n      questionData: questionData\n    });\n  }\n\n  updateAnswers(questionNumber, choosedAnswer) {\n    let newAnswers = this.state.answers;\n    newAnswers[questionNumber - 1][choosedAnswer] += 1;\n    this.setState({\n      answers: newAnswers\n    });\n  }\n\n  updateQuestionState(question, state) {\n    let tempState = this.state.questionState;\n    tempState[question] = state;\n    this.setState({\n      questionState: tempState\n    });\n  }\n\n  async startQuestion(questionNumber) {\n    let tempQuestionData = this.state.questionData;\n    tempQuestionData[questionNumber - 1]['isActive'] = true;\n    this.setState({\n      questionData: tempQuestionData\n    });\n    console.log(tempQuestionData); //await fetch('./question-data.json', {method: 'POST', body: tempQuestionData});\n  }\n\n  async endQuestion(questionNumber) {\n    let tempQuestionData = this.state.questionData;\n    tempQuestionData[questionNumber - 1]['isActive'] = false;\n    tempQuestionData[questionNumber - 1]['isFinished'] = true;\n    this.setState({\n      questionData: tempQuestionData\n    });\n    console.log(tempQuestionData); //await fetch('./question-data.json', {method: 'POST', body: tempQuestionData});\n  }\n\n  async resetQuestion(questionNumber) {\n    let tempQuestionData = this.state.questionData;\n    tempQuestionData[questionNumber - 1]['isActive'] = true;\n    tempQuestionData[questionNumber - 1]['isFinished'] = false;\n    tempQuestionData[questionNumber - 1]['answers'] = [0, 0, 0];\n    this.setState({\n      questionData: tempQuestionData\n    });\n    console.log(tempQuestionData); //await fetch('./question-data.json', {method: 'POST', body: tempQuestionData});\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"navigation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"navigation__item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/question1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"\\u0432\\u043E\\u043F\\u0440\\u043E\\u0441 1\")), React.createElement(\"li\", {\n      className: \"navigation__item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/question2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"\\u0432\\u043E\\u043F\\u0440\\u043E\\u0441 2\")), React.createElement(\"li\", {\n      className: \"navigation__item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/question3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"\\u0432\\u043E\\u043F\\u0440\\u043E\\u0441 3\")), React.createElement(\"li\", {\n      className: \"navigation__item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/question4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"\\u0432\\u043E\\u043F\\u0440\\u043E\\u0441 4\")), React.createElement(\"li\", {\n      className: \"navigation__item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/question5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"\\u0432\\u043E\\u043F\\u0440\\u043E\\u0441 5\")))), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(AdminPage, {\n      startQuestion: this.startQuestion,\n      endQuestion: this.endQuestion,\n      resetQuestion: this.resetQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/question1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(QuestionOne, {\n      answers: this.state.answers[0],\n      updateQuestionState: this.updateQuestionState,\n      questionState: this.state.questionState,\n      updateAnswers: this.updateAnswers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/question2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(QuestionTwo, {\n      answers: this.state.answers[1],\n      updateQuestionState: this.updateQuestionState,\n      questionState: this.state.questionState,\n      updateAnswers: this.updateAnswers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/question3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(QuestionThree, {\n      answers: this.state.answers[2],\n      updateQuestionState: this.updateQuestionState,\n      questionState: this.state.questionState,\n      updateAnswers: this.updateAnswers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/question4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(QuestionFour, {\n      answers: this.state.answers[3],\n      updateQuestionState: this.updateQuestionState,\n      questionState: this.state.questionState,\n      updateAnswers: this.updateAnswers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/question5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(QuestionFive, {\n      answers: this.state.answers[4],\n      updateQuestionState: this.updateQuestionState,\n      questionState: this.state.questionState,\n      updateAnswers: this.updateAnswers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(StartPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Gregory/projects/quiz/src/containers/App.js"],"names":["React","AdminPage","QuestionOne","QuestionTwo","QuestionThree","QuestionFour","QuestionFive","StartPage","BrowserRouter","Router","Switch","Route","Link","App","Component","constructor","props","update","bind","startQuestion","endQuestion","resetQuestion","updateAnswers","updateQuestionState","state","answers","isIntervalSet","questionState","questionData","response","fetch","json","newAnswers","i","length","push","setState","questionNumber","choosedAnswer","question","tempState","tempQuestionData","console","log","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport AdminPage from \"../components/AdminPage\"\nimport QuestionOne from \"../components/QuestionOne\"\nimport QuestionTwo from \"../components/QuestionTwo\"\nimport QuestionThree from \"../components/QuestionThree\"\nimport QuestionFour from \"../components/QuestionFour\"\nimport QuestionFive from \"../components/QuestionFive\"\nimport StartPage from \"../components/StartPage\"\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.startQuestion = this.startQuestion.bind(this);\n    this.endQuestion = this.endQuestion.bind(this);\n    this.resetQuestion = this.resetQuestion.bind(this);\n    this.updateAnswers = this.updateAnswers.bind(this);\n    this.updateQuestionState = this.updateQuestionState.bind(this);\n    //window.setInterval(this.update, 5000);\n    this.state={answers: [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]], isIntervalSet: false,\n       questionState: {1: true, 2: true, 3: true, 4: true, 5: true}, questionData: [\n             {\n        \"isActive\": false,\n        \"isFinished\": false,\n        \"answers\": [1, 2, 3]\n    },\n    {\n        \"isActive\": false,\n        \"isFinished\": false,\n        \"answers\": [2, 2, 2]\n    },\n    {\n        \"isActive\": false,\n        \"isFinished\": false,\n        \"answers\": [3, 2, 1]\n    },\n    {\n        \"isActive\": false,\n        \"isFinished\": false,\n        \"answers\": [4, 4, 4]\n    },\n    {\n        \"isActive\": false,\n        \"isFinished\": false,\n        \"answers\": [5, 0, 0]\n    }]};\n  }\n\n  async update() {\n    const response = await fetch('./question-data.json');\n    const questionData = await response.json();\n    let newAnswers = [];\n    for (let i = 0; i < questionData.length; i++) {\n      newAnswers.push(questionData[i]['answers']);\n    }\n    this.setState({\n      answers: newAnswers,\n      questionData: questionData\n    });\n  }\n\n  updateAnswers(questionNumber, choosedAnswer) {\n    let newAnswers = this.state.answers;\n    newAnswers[questionNumber - 1][choosedAnswer] += 1;\n    this.setState({\n      answers: newAnswers,\n    });\n  }\n\n  updateQuestionState(question, state){\n    let tempState = this.state.questionState;\n    tempState[question] = state;\n    this.setState({\n      questionState: tempState,\n    });\n  }\n\n  async startQuestion(questionNumber) {\n    let tempQuestionData = this.state.questionData;\n    tempQuestionData[questionNumber - 1]['isActive'] = true;\n    this.setState({\n      questionData: tempQuestionData\n    });\n    console.log(tempQuestionData);\n    //await fetch('./question-data.json', {method: 'POST', body: tempQuestionData});\n  }\n\n  async endQuestion(questionNumber) {\n    let tempQuestionData = this.state.questionData;\n    tempQuestionData[questionNumber - 1]['isActive'] = false;\n    tempQuestionData[questionNumber - 1]['isFinished'] = true;\n    this.setState({\n      questionData: tempQuestionData\n    });\n    console.log(tempQuestionData);\n    //await fetch('./question-data.json', {method: 'POST', body: tempQuestionData});\n  }\n\n  async resetQuestion(questionNumber) {\n    let tempQuestionData = this.state.questionData;\n    tempQuestionData[questionNumber - 1]['isActive'] = true;\n    tempQuestionData[questionNumber - 1]['isFinished'] = false;\n    tempQuestionData[questionNumber - 1]['answers'] = [0, 0, 0];\n    this.setState({\n      questionData: tempQuestionData\n    });\n    console.log(tempQuestionData);\n    //await fetch('./question-data.json', {method: 'POST', body: tempQuestionData});\n  }\n\n  render () {\n    return (\n      <Router>\n        <div>\n          <nav>\n            <ul className=\"navigation\">\n              <li className=\"navigation__item\">\n                <Link to=\"/question1\">вопрос 1</Link>\n              </li>\n              <li className=\"navigation__item\">\n                <Link to=\"/question2\">вопрос 2</Link>\n              </li>\n              <li className=\"navigation__item\">\n                <Link to=\"/question3\">вопрос 3</Link>\n              </li>\n              <li className=\"navigation__item\">\n                <Link to=\"/question4\">вопрос 4</Link>\n              </li>\n              <li className=\"navigation__item\">\n                <Link to=\"/question5\">вопрос 5</Link>\n              </li>\n            </ul>\n          </nav>\n\n          {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/admin\">\n              <AdminPage startQuestion={this.startQuestion} endQuestion={this.endQuestion} resetQuestion={this.resetQuestion} />\n            </Route>\n            <Route path=\"/question1\">\n              <QuestionOne answers={this.state.answers[0]} updateQuestionState={this.updateQuestionState}\n              questionState={this.state.questionState} updateAnswers={this.updateAnswers} />\n            </Route>\n            <Route path=\"/question2\">\n              <QuestionTwo answers={this.state.answers[1]} updateQuestionState={this.updateQuestionState}\n              questionState={this.state.questionState} updateAnswers={this.updateAnswers} />\n            </Route>\n            <Route path=\"/question3\">\n              <QuestionThree answers={this.state.answers[2]} updateQuestionState={this.updateQuestionState}\n              questionState={this.state.questionState} updateAnswers={this.updateAnswers} />\n            </Route>\n            <Route path=\"/question4\">\n              <QuestionFour answers={this.state.answers[3]} updateQuestionState={this.updateQuestionState}\n              questionState={this.state.questionState} updateAnswers={this.updateAnswers} />\n            </Route>\n            <Route path=\"/question5\">\n              <QuestionFive answers={this.state.answers[4]} updateQuestionState={this.updateQuestionState}\n              questionState={this.state.questionState} updateAnswers={this.updateAnswers} />\n            </Route>\n            <Route path=\"/\">\n              <StartPage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}