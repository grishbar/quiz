{"ast":null,"code":"var _jsxFileName = \"/Users/Gregory/projects/quiz/src/components/QuestionItem.js\";\nimport React from 'react';\nexport default class QuestionOne extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      choosedAnswer: '0'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      choosedAnswer: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    //console.log(this.state.choosedAnswer);\n    event.preventDefault();\n    this.props.update(this.state.choosedAnswer);\n    this.props.updateQuestionState(this.props.questionNumber, false); //сюда дописать сохранение в локальное хранилище пользователя\n  }\n\n  async update(choosedAnswer) {\n    console.log('start post');\n    const response = await fetch('./question-data.json');\n    let questionData = await response.json();\n    questionData[this.props.questionNumber - 1]['answers'][choosedAnswer] += 1;\n    console.log(questionData); // await fetch('./question-data.json', {method: 'POST', body: questionData});\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"question-block\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"question-block__question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.props.question), this.props.questionState[this.props.questionNumber] && this.props.variants.map((item, index) => React.createElement(\"p\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"question\",\n      type: \"radio\",\n      value: index,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), \" \", item)), this.props.questionState[this.props.questionNumber] && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/Gregory/projects/quiz/src/components/QuestionItem.js"],"names":["React","QuestionOne","Component","constructor","props","state","choosedAnswer","handleChange","bind","handleSubmit","event","setState","target","value","preventDefault","update","updateQuestionState","questionNumber","console","log","response","fetch","questionData","json","render","question","questionState","variants","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,aAAa,EAAE;AAAhB,KAAb;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChB,SAAKC,QAAL,CAAc;AAACL,MAAAA,aAAa,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAA7B,KAAd;AACH;;AAEDJ,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClB;AACAA,IAAAA,KAAK,CAACI,cAAN;AACA,SAAKV,KAAL,CAAWW,MAAX,CAAkB,KAAKV,KAAL,CAAWC,aAA7B;AACA,SAAKF,KAAL,CAAWY,mBAAX,CAA+B,KAAKZ,KAAL,CAAWa,cAA1C,EAA0D,KAA1D,EAJkB,CAKlB;AACD;;AAED,QAAMF,MAAN,CAAaT,aAAb,EAA4B;AACxBY,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sBAAD,CAA5B;AACA,QAAIC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAzB;AACAD,IAAAA,YAAY,CAAC,KAAKlB,KAAL,CAAWa,cAAX,GAA4B,CAA7B,CAAZ,CAA4C,SAA5C,EAAuDX,aAAvD,KAAyE,CAAzE;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYG,YAAZ,EALwB,CAM3B;AACA;;AAEDE,EAAAA,MAAM,GAAI;AACN,WACI;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAiC,MAAA,QAAQ,EAAE,KAAKf,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2C,KAAKL,KAAL,CAAWqB,QAAtD,CADJ,EAEK,KAAKrB,KAAL,CAAWsB,aAAX,CAAyB,KAAKtB,KAAL,CAAWa,cAApC,KAAuD,KAAKb,KAAL,CAAWuB,QAAX,CAAoBC,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,KAC5E;AAAG,MAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAe;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,OAA5B;AAAoC,MAAA,KAAK,EAAEA,KAA3C;AAAkD,MAAA,QAAQ,EAAE,KAAKvB,YAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf,OAAkGsB,IAAlG,CADoD,CAF5D,EAKK,KAAKzB,KAAL,CAAWsB,aAAX,CAAyB,KAAKtB,KAAL,CAAWa,cAApC,KAAuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,wDAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,CAL5D,CADJ;AASH;;AAxCoD","sourcesContent":["import React from 'react';\n\nexport default class QuestionOne extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {choosedAnswer: '0'};\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({choosedAnswer: event.target.value});\n    }\n    \n    handleSubmit(event) {\n      //console.log(this.state.choosedAnswer);\n      event.preventDefault();\n      this.props.update(this.state.choosedAnswer);\n      this.props.updateQuestionState(this.props.questionNumber, false);\n      //сюда дописать сохранение в локальное хранилище пользователя\n    }\n\n    async update(choosedAnswer) {\n        console.log('start post');\n        const response = await fetch('./question-data.json');\n        let questionData = await response.json();\n        questionData[this.props.questionNumber - 1]['answers'][choosedAnswer] += 1;\n        console.log(questionData);\n     // await fetch('./question-data.json', {method: 'POST', body: questionData});\n    }\n    \n    render () {\n        return (\n            <form className=\"question-block\" onSubmit={this.handleSubmit}>\n                <div className=\"question-block__question\">{this.props.question}</div>\n                {this.props.questionState[this.props.questionNumber] && this.props.variants.map((item, index) => (\n                    <p key={index}><input name=\"question\" type=\"radio\" value={index} onChange={this.handleChange} /> {item}</p>\n                ))}\n                {this.props.questionState[this.props.questionNumber] && <p><input type=\"submit\" value=\"Отправить\" /></p>}\n            </form>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}