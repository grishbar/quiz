{"ast":null,"code":"var _jsxFileName = \"/Users/Gregory/projects/quiz/src/components/Diagram.js\";\nimport React from 'react';\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries, FlexibleWidthXYPlot } from 'react-vis';\nimport Candlestick from './candlestick';\n\nfunction buildRandomBinnedData(total) {\n  const result = Array(total).fill(0).map((x, i) => {\n    const values = [Math.random(), Math.random(), Math.random(), Math.random()].sort().map(d => Math.floor(d * 100));\n    const y = (values[2] + values[1]) / 2;\n    return {\n      x: i,\n      y,\n      yHigh: values[3],\n      yOpen: values[2],\n      yClose: values[1],\n      yLow: values[0],\n      color: y < 25 ? '#EF5D28' : '#12939A',\n      opacity: y > 75 ? 0.7 : 1\n    };\n  });\n  return result;\n}\n\nexport default class QuestionOne extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: buildRandomBinnedData(30)\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"candlestick-example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(FlexibleWidthXYPlot, {\n      animation: true,\n      yDomain: [0, 100],\n      height: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(XAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(LineSeries, {\n      color: \"#12939A\",\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(LineSeries, {\n      color: \"#FF9833\",\n      className: \"dashed-example-line\",\n      data: [{\n        x: 0,\n        y: 25\n      }, {\n        x: 30,\n        y: 25\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(LineSeries, {\n      color: \"#1A3177\",\n      className: \"dashed-example-line\",\n      opacity: 0.3,\n      data: [{\n        x: 0,\n        y: 75\n      }, {\n        x: 30,\n        y: 75\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Candlestick, {\n      colorType: \"literal\",\n      opacityType: \"literal\",\n      stroke: \"#79C7E3\",\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Gregory/projects/quiz/src/components/Diagram.js"],"names":["React","XYPlot","XAxis","YAxis","HorizontalGridLines","LineSeries","FlexibleWidthXYPlot","Candlestick","buildRandomBinnedData","total","result","Array","fill","map","x","i","values","Math","random","sort","d","floor","y","yHigh","yOpen","yClose","yLow","color","opacity","QuestionOne","Component","state","data","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries, FlexibleWidthXYPlot} from 'react-vis';\nimport Candlestick from './candlestick';\n\nfunction buildRandomBinnedData(total) {\n    const result = Array(total)\n      .fill(0)\n      .map((x, i) => {\n        const values = [\n          Math.random(),\n          Math.random(),\n          Math.random(),\n          Math.random()\n        ]\n          .sort()\n          .map(d => Math.floor(d * 100));\n        const y = (values[2] + values[1]) / 2;\n        return {\n          x: i,\n          y,\n          yHigh: values[3],\n          yOpen: values[2],\n          yClose: values[1],\n          yLow: values[0],\n          color: y < 25 ? '#EF5D28' : '#12939A',\n          opacity: y > 75 ? 0.7 : 1\n        };\n      });\n    return result;\n  }\n\nexport default class QuestionOne extends React.Component {\n    state = {\n        data: buildRandomBinnedData(30)\n    };\n    render () {\n        return (\n            <div className=\"candlestick-example\">\n            <div className=\"chart\">\n              <FlexibleWidthXYPlot animation yDomain={[0, 100]} height={300}>\n                <XAxis />\n                <YAxis />\n                <LineSeries color=\"#12939A\" data={this.state.data} />\n                <LineSeries\n                  color=\"#FF9833\"\n                  className=\"dashed-example-line\"\n                  data={[{x: 0, y: 25}, {x: 30, y: 25}]}\n                />\n                <LineSeries\n                  color=\"#1A3177\"\n                  className=\"dashed-example-line\"\n                  opacity={0.3}\n                  data={[{x: 0, y: 75}, {x: 30, y: 75}]}\n                />\n                <Candlestick\n                  colorType=\"literal\"\n                  opacityType=\"literal\"\n                  stroke=\"#79C7E3\"\n                  data={this.state.data}\n                />\n              </FlexibleWidthXYPlot>\n            </div>\n          </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}