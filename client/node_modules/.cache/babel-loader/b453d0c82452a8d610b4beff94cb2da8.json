{"ast":null,"code":"var _jsxFileName = \"/Users/Gregory/projects/quiz/client/src/containers/App.js\";\nimport React from \"react\";\nimport AdminPage from \"../components/AdminPage\";\nimport QuestionOne from \"../components/QuestionOne\";\nimport QuestionTwo from \"../components/QuestionTwo\";\nimport QuestionThree from \"../components/QuestionThree\";\nimport QuestionFour from \"../components/QuestionFour\";\nimport QuestionFive from \"../components/QuestionFive\";\nimport StartPage from \"../components/StartPage\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.startQuestion = this.startQuestion.bind(this);\n    this.endQuestion = this.endQuestion.bind(this);\n    this.resetQuestion = this.resetQuestion.bind(this);\n    this.updateAnswers = this.updateAnswers.bind(this);\n    this.updateQuestionState = this.updateQuestionState.bind(this);\n    window.setInterval(this.update, 5000);\n    this.state = {\n      answers: [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],\n      isIntervalSet: false,\n      questionState: {\n        1: true,\n        2: true,\n        3: true,\n        4: true,\n        5: true\n      },\n      questionData: [{\n        \"isActive\": false,\n        \"isFinished\": false,\n        \"answers\": [0, 0, 0]\n      }, {\n        \"isActive\": false,\n        \"isFinished\": false,\n        \"answers\": [0, 0, 0]\n      }, {\n        \"isActive\": false,\n        \"isFinished\": false,\n        \"answers\": [0, 0, 0]\n      }, {\n        \"isActive\": false,\n        \"isFinished\": false,\n        \"answers\": [0, 0, 0]\n      }, {\n        \"isActive\": false,\n        \"isFinished\": false,\n        \"answers\": [0, 0, 0]\n      }]\n    };\n  }\n\n  async update() {\n    const response = await fetch('/api/question-data');\n    const questionData = await response.json();\n    let newAnswers = [];\n\n    for (let i = 0; i < questionData.length; i++) {\n      newAnswers.push(questionData[i]['answers']);\n    }\n\n    this.setState({\n      answers: newAnswers,\n      questionData: questionData\n    });\n  }\n\n  async updateAnswers(questionNumber, choosedAnswer) {\n    console.log('start post questionNumber - ' + questionNumber + ' choosedAnswer - ' + choosedAnswer);\n    const response = await fetch('/api/question-data/add-answers', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify({\n        questionNumber: 1,\n        choosedAnswer: 1\n      })\n    });\n    const questionData = await response.json();\n    let newAnswers = [];\n\n    for (let i = 0; i < questionData.length; i++) {\n      newAnswers.push(questionData[i]['answers']);\n    }\n\n    this.setState({\n      answers: newAnswers\n    });\n  }\n\n  updateQuestionState(question, state) {\n    let tempState = this.state.questionState;\n    tempState[question] = state;\n    this.setState({\n      questionState: tempState\n    });\n  }\n\n  async startQuestion(questionNumber) {\n    let tempQuestionData = this.state.questionData;\n    tempQuestionData[questionNumber - 1]['isActive'] = true;\n    this.setState({\n      questionData: tempQuestionData\n    });\n    console.log(tempQuestionData); //await fetch('./question-data.json', {method: 'POST', body: tempQuestionData});\n  }\n\n  async endQuestion(questionNumber) {\n    let tempQuestionData = this.state.questionData;\n    tempQuestionData[questionNumber - 1]['isActive'] = false;\n    tempQuestionData[questionNumber - 1]['isFinished'] = true;\n    this.setState({\n      questionData: tempQuestionData\n    });\n    console.log(tempQuestionData); //await fetch('./question-data.json', {method: 'POST', body: tempQuestionData});\n  }\n\n  async resetQuestion(questionNumber) {\n    let tempQuestionData = this.state.questionData;\n    tempQuestionData[questionNumber - 1]['isActive'] = true;\n    tempQuestionData[questionNumber - 1]['isFinished'] = false;\n    tempQuestionData[questionNumber - 1]['answers'] = [0, 0, 0];\n    this.setState({\n      questionData: tempQuestionData\n    });\n    console.log(tempQuestionData); //await fetch('./question-data.json', {method: 'POST', body: tempQuestionData});\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"navigation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"navigation__item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/question1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"\\u0432\\u043E\\u043F\\u0440\\u043E\\u0441 1\")), React.createElement(\"li\", {\n      className: \"navigation__item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/question2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"\\u0432\\u043E\\u043F\\u0440\\u043E\\u0441 2\")), React.createElement(\"li\", {\n      className: \"navigation__item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/question3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"\\u0432\\u043E\\u043F\\u0440\\u043E\\u0441 3\")), React.createElement(\"li\", {\n      className: \"navigation__item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/question4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"\\u0432\\u043E\\u043F\\u0440\\u043E\\u0441 4\")), React.createElement(\"li\", {\n      className: \"navigation__item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/question5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"\\u0432\\u043E\\u043F\\u0440\\u043E\\u0441 5\")))), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(AdminPage, {\n      startQuestion: this.startQuestion,\n      endQuestion: this.endQuestion,\n      resetQuestion: this.resetQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/question1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(QuestionOne, {\n      answers: this.state.answers[0],\n      updateQuestionState: this.updateQuestionState,\n      questionState: this.state.questionState,\n      updateAnswers: this.updateAnswers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/question2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(QuestionTwo, {\n      answers: this.state.answers[1],\n      updateQuestionState: this.updateQuestionState,\n      questionState: this.state.questionState,\n      updateAnswers: this.updateAnswers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/question3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(QuestionThree, {\n      answers: this.state.answers[2],\n      updateQuestionState: this.updateQuestionState,\n      questionState: this.state.questionState,\n      updateAnswers: this.updateAnswers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/question4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(QuestionFour, {\n      answers: this.state.answers[3],\n      updateQuestionState: this.updateQuestionState,\n      questionState: this.state.questionState,\n      updateAnswers: this.updateAnswers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/question5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(QuestionFive, {\n      answers: this.state.answers[4],\n      updateQuestionState: this.updateQuestionState,\n      questionState: this.state.questionState,\n      updateAnswers: this.updateAnswers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(StartPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Gregory/projects/quiz/client/src/containers/App.js"],"names":["React","AdminPage","QuestionOne","QuestionTwo","QuestionThree","QuestionFour","QuestionFive","StartPage","BrowserRouter","Router","Switch","Route","Link","App","Component","constructor","props","update","bind","startQuestion","endQuestion","resetQuestion","updateAnswers","updateQuestionState","window","setInterval","state","answers","isIntervalSet","questionState","questionData","response","fetch","json","newAnswers","i","length","push","setState","questionNumber","choosedAnswer","console","log","method","headers","body","JSON","stringify","question","tempState","tempQuestionData","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport AdminPage from \"../components/AdminPage\"\nimport QuestionOne from \"../components/QuestionOne\"\nimport QuestionTwo from \"../components/QuestionTwo\"\nimport QuestionThree from \"../components/QuestionThree\"\nimport QuestionFour from \"../components/QuestionFour\"\nimport QuestionFive from \"../components/QuestionFive\"\nimport StartPage from \"../components/StartPage\"\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.startQuestion = this.startQuestion.bind(this);\n    this.endQuestion = this.endQuestion.bind(this);\n    this.resetQuestion = this.resetQuestion.bind(this);\n    this.updateAnswers = this.updateAnswers.bind(this);\n    this.updateQuestionState = this.updateQuestionState.bind(this);\n    window.setInterval(this.update, 5000);\n    this.state={answers: [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]], isIntervalSet: false,\n      questionState: {1: true, 2: true, 3: true, 4: true, 5: true}, questionData: [\n        {\n            \"isActive\": false,\n            \"isFinished\": false,\n            \"answers\": [0, 0, 0]\n        },\n        {\n            \"isActive\": false,\n            \"isFinished\": false,\n            \"answers\": [0, 0, 0]\n        },\n        {\n            \"isActive\": false,\n            \"isFinished\": false,\n            \"answers\": [0, 0, 0]\n        },\n        {\n            \"isActive\": false,\n            \"isFinished\": false,\n            \"answers\": [0, 0, 0]\n        },\n        {\n            \"isActive\": false,\n            \"isFinished\": false,\n            \"answers\": [0, 0, 0]\n        }]};\n  }\n\n  async update() {\n    const response = await fetch('/api/question-data');\n    const questionData = await response.json();\n    let newAnswers = [];\n    for (let i = 0; i < questionData.length; i++) {\n      newAnswers.push(questionData[i]['answers']);\n    }\n    this.setState({\n      answers: newAnswers,\n      questionData: questionData\n    });\n  }\n\n  async updateAnswers(questionNumber, choosedAnswer) {\n    console.log('start post questionNumber - ' + questionNumber + ' choosedAnswer - ' + choosedAnswer);\n    const response = await fetch('/api/question-data/add-answers', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify({questionNumber: 1, choosedAnswer: 1 })});\n    const questionData = await response.json();\n    let newAnswers = [];\n    for (let i = 0; i < questionData.length; i++) {\n      newAnswers.push(questionData[i]['answers']);\n    }\n    this.setState({\n      answers: newAnswers,\n    });\n  }\n\n  updateQuestionState(question, state){\n    let tempState = this.state.questionState;\n    tempState[question] = state;\n    this.setState({\n      questionState: tempState,\n    });\n  }\n\n  async startQuestion(questionNumber) {\n    let tempQuestionData = this.state.questionData;\n    tempQuestionData[questionNumber - 1]['isActive'] = true;\n    this.setState({\n      questionData: tempQuestionData\n    });\n    console.log(tempQuestionData);\n    //await fetch('./question-data.json', {method: 'POST', body: tempQuestionData});\n  }\n\n  async endQuestion(questionNumber) {\n    let tempQuestionData = this.state.questionData;\n    tempQuestionData[questionNumber - 1]['isActive'] = false;\n    tempQuestionData[questionNumber - 1]['isFinished'] = true;\n    this.setState({\n      questionData: tempQuestionData\n    });\n    console.log(tempQuestionData);\n    //await fetch('./question-data.json', {method: 'POST', body: tempQuestionData});\n  }\n\n  async resetQuestion(questionNumber) {\n    let tempQuestionData = this.state.questionData;\n    tempQuestionData[questionNumber - 1]['isActive'] = true;\n    tempQuestionData[questionNumber - 1]['isFinished'] = false;\n    tempQuestionData[questionNumber - 1]['answers'] = [0, 0, 0];\n    this.setState({\n      questionData: tempQuestionData\n    });\n    console.log(tempQuestionData);\n    //await fetch('./question-data.json', {method: 'POST', body: tempQuestionData});\n  }\n\n  render () {\n    return (\n      <Router>\n        <div>\n          <nav>\n            <ul className=\"navigation\">\n              <li className=\"navigation__item\">\n                <Link to=\"/question1\">вопрос 1</Link>\n              </li>\n              <li className=\"navigation__item\">\n                <Link to=\"/question2\">вопрос 2</Link>\n              </li>\n              <li className=\"navigation__item\">\n                <Link to=\"/question3\">вопрос 3</Link>\n              </li>\n              <li className=\"navigation__item\">\n                <Link to=\"/question4\">вопрос 4</Link>\n              </li>\n              <li className=\"navigation__item\">\n                <Link to=\"/question5\">вопрос 5</Link>\n              </li>\n            </ul>\n          </nav>\n\n          {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/admin\">\n              <AdminPage startQuestion={this.startQuestion} endQuestion={this.endQuestion} resetQuestion={this.resetQuestion} />\n            </Route>\n            <Route path=\"/question1\">\n              <QuestionOne answers={this.state.answers[0]} updateQuestionState={this.updateQuestionState}\n              questionState={this.state.questionState} updateAnswers={this.updateAnswers} />\n            </Route>\n            <Route path=\"/question2\">\n              <QuestionTwo answers={this.state.answers[1]} updateQuestionState={this.updateQuestionState}\n              questionState={this.state.questionState} updateAnswers={this.updateAnswers} />\n            </Route>\n            <Route path=\"/question3\">\n              <QuestionThree answers={this.state.answers[2]} updateQuestionState={this.updateQuestionState}\n              questionState={this.state.questionState} updateAnswers={this.updateAnswers} />\n            </Route>\n            <Route path=\"/question4\">\n              <QuestionFour answers={this.state.answers[3]} updateQuestionState={this.updateQuestionState}\n              questionState={this.state.questionState} updateAnswers={this.updateAnswers} />\n            </Route>\n            <Route path=\"/question5\">\n              <QuestionFive answers={this.state.answers[4]} updateQuestionState={this.updateQuestionState}\n              questionState={this.state.questionState} updateAnswers={this.updateAnswers} />\n            </Route>\n            <Route path=\"/\">\n              <StartPage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}