{"ast":null,"code":"var _jsxFileName = \"/Users/Gregory/projects/quiz/src/components/QuestionItem.js\";\nimport React from 'react';\nexport default class QuestionOne extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      choosedAnswer: '0'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      choosedAnswer: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    console.log(this.state.choosedAnswer);\n    event.preventDefault(); //this.update(this.state.choosedAnswer);\n  }\n\n  async update(choosedAnswer) {\n    const response = await fetch('./question-data.json');\n    let questionData = await response.json();\n    let newAnswers = [];\n\n    for (let i = 0; i < questionData.length; i++) {\n      newAnswers.push(questionData[i]['answers']);\n    } //  await fetch('./question-data.json', {method: 'POST', body:});\n\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"question-block\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"question-block__question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.props.question), this.props.variants.map((item, index) => React.createElement(\"p\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"question\",\n      type: \"radio\",\n      value: index,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), \" \", item)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/Gregory/projects/quiz/src/components/QuestionItem.js"],"names":["React","QuestionOne","Component","constructor","props","state","choosedAnswer","handleChange","bind","handleSubmit","event","setState","target","value","console","log","preventDefault","update","response","fetch","questionData","json","newAnswers","i","length","push","render","question","variants","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,aAAa,EAAE;AAAhB,KAAb;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChB,SAAKC,QAAL,CAAc;AAACL,MAAAA,aAAa,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAA7B,KAAd;AACH;;AAEDJ,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClBI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWC,aAAvB;AACAI,IAAAA,KAAK,CAACM,cAAN,GAFkB,CAGlB;AACD;;AAED,QAAMC,MAAN,CAAaX,aAAb,EAA4B;AACxB,UAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,sBAAD,CAA5B;AACA,QAAIC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAzB;AACA,QAAIC,UAAU,GAAG,EAAjB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,YAAY,CAACI,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5CD,MAAAA,UAAU,CAACG,IAAX,CAAgBL,YAAY,CAACG,CAAD,CAAZ,CAAgB,SAAhB,CAAhB;AACD,KANuB,CAO1B;;AACD;;AAEDG,EAAAA,MAAM,GAAI;AACN,WACI;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAiC,MAAA,QAAQ,EAAE,KAAKjB,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2C,KAAKL,KAAL,CAAWuB,QAAtD,CADJ,EAEK,KAAKvB,KAAL,CAAWwB,QAAX,CAAoBC,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,KACrB;AAAG,MAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAe;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,OAA5B;AAAoC,MAAA,KAAK,EAAEA,KAA3C;AAAkD,MAAA,QAAQ,EAAE,KAAKxB,YAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf,OAAkGuB,IAAlG,CADH,CAFL,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,wDAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,CALJ,CADJ;AASH;;AAvCoD","sourcesContent":["import React from 'react';\n\nexport default class QuestionOne extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {choosedAnswer: '0'};\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({choosedAnswer: event.target.value});\n    }\n    \n    handleSubmit(event) {\n      console.log(this.state.choosedAnswer);\n      event.preventDefault();\n      //this.update(this.state.choosedAnswer);\n    }\n\n    async update(choosedAnswer) {\n        const response = await fetch('./question-data.json');\n        let questionData = await response.json();\n        let newAnswers = [];\n        for (let i = 0; i < questionData.length; i++) {\n          newAnswers.push(questionData[i]['answers']);\n        }\n      //  await fetch('./question-data.json', {method: 'POST', body:});\n    }\n    \n    render () {\n        return (\n            <form className=\"question-block\" onSubmit={this.handleSubmit}>\n                <div className=\"question-block__question\">{this.props.question}</div>\n                {this.props.variants.map((item, index) => (\n                    <p key={index}><input name=\"question\" type=\"radio\" value={index} onChange={this.handleChange} /> {item}</p>\n                ))}\n                <p><input type=\"submit\" value=\"Отправить\" /></p>\n            </form>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}